<?xml version="1.0" encoding="UTF-8"?>
<project name="ST4" default="distribute" basedir=".">
    <target name="basic-init">
        <property file="user.build.properties"/>
        <property name="src.dir" value="${basedir}/src" />
        <property name="dist.dir" value="${basedir}/dist" />
        <property name="build.dir" value="${basedir}/build" />
        <property name="lib.dir" value="${basedir}/lib" />
    </target>

    <target name="antlr3-init" depends="basic-init">
        <property name="antlr3.version" value="3.5"/>
        <property name="antlr3.jar.name" value="antlr-${antlr3.version}-complete.jar"/>
        <property name="antlr3.jar" value="${lib.dir}/${antlr3.jar.name}"/>
        <mkdir dir="${lib.dir}"/>
        <get src="http://antlr.org/download/${antlr3.jar.name}" dest="${antlr3.jar}" skipexisting="true"/>
        <path id="cp.antlr3" path="${antlr3.jar}"/>

        <property name="build.antlr3.dir" value="${build.dir}/generated-sources/antlr3" />
        <property name="antlr3.touch" value="${build.dir}/antlr3-${antlr3.version}.touch"/>
    </target>

    <target name="build-init" depends="basic-init">
        <property name="version" value="4.0.8-dev"/>
        <property name="build.sysclasspath" value="ignore"/>
        <property name="install.root.dir" value="${dist.dir}/ST-${version}" />
        <property name="jar.file" value="${dist.dir}/ST-${version}.jar" />
    </target>

    <target name="clean" depends="basic-init">
        <delete dir="${build.dir}" includeemptydirs="true"/>
        <delete dir="${dist.dir}" includeemptydirs="true"/>
    </target>

    <target name="clean-all" depends="clean">
        <delete dir="${lib.dir}" includeemptydirs="true"/>
    </target>

    <target name="antlr3-up-to-date" depends="basic-init,antlr3-init">
        <uptodate targetfile="${antlr3.touch}" property="is.antlr3.uptodate">
            <srcfiles dir="${src.dir}">
                <include name="**/*.g"/>
                <include name="**/*.tokens"/>
            </srcfiles>
            <srcfiles file="${antlr3.jar}"/>
        </uptodate>
    </target>

    <target name="up-to-date" depends="antlr3-up-to-date,build-init">
        <uptodate targetfile="${jar.file}" property="is.source.uptodate">
            <srcfiles dir="${src.dir}">
                <include name="**/*.java"/>
                <include name="**/*.g"/>
                <include name="**/*.tokens"/>
            </srcfiles>
            <srcfiles dir="${build.antlr3.dir}"/>
            <srcfiles file="${antlr3.jar}"/>
        </uptodate>

        <condition property="is.jar.uptodate">
            <and>
                <istrue value="${is.source.uptodate}"/>
                <istrue value="${is.antlr3.uptodate}"/>
            </and>
        </condition>
    </target>

    <macrodef name="antlr3">
        <attribute name="srcpath"/>
        <element name="args" optional="true"/>
        <sequential>
            <mkdir dir="${build.antlr3.dir}/@{srcpath}"/>
            <java classname="org.antlr.Tool" fork="true" failonerror="true" maxmemory="300m"
                  dir="${src.dir}/@{srcpath}">
                <arg value="-o"/>
                <arg value="${build.antlr3.dir}/@{srcpath}"/>
                <args/>
                <arg value="*.g"/>
                <classpath>
                    <path refid="cp.antlr3"/>
                    <pathelement location="${java.class.path}"/>
                </classpath>
            </java>
        </sequential>
    </macrodef>

	<target name="antlr3" depends="build-init,antlr3-init,antlr3-up-to-date" unless="is.antlr3.uptodate">
        <mkdir dir="${build.antlr3.dir}" />

        <path id="sources.antlr3">
            <fileset dir="${src.dir}" includes="**/*.g"/>
        </path>
        <pathconvert pathsep="${line.separator}  " property="echo.sources.antlr3" refid="sources.antlr3">
            <map from="${src.dir}/" to=""/>
        </pathconvert>
        <echo message="Generating ANTLR 3 grammars:${line.separator}  ${echo.sources.antlr3}"/>

        <antlr3 srcpath="org/stringtemplate/v4/compiler"/>
        <touch file="${antlr3.touch}" mkdirs="true"/>
	</target>

    <target name="compile" depends="build-init,antlr3,up-to-date" description="Compile for generic OS" unless="is.jar.uptodate">
        <mkdir dir="${build.dir}/classes"/>
        <javac
                destdir="${build.dir}/classes"
                source="1.5"
                target="1.5"
                debug="true">
            <compilerarg value="-Xlint"/>
            <compilerarg value="-Xlint:-serial"/>
            <classpath>
                <path refid="cp.antlr3"/>
            </classpath>
            <src path="${src.dir}:${build.antlr3.dir}"/>
        </javac>
    </target>

    <target name="build-jar" depends="up-to-date,compile" description="Build ST4.jar" unless="is.jar.uptodate">
        <mkdir dir="${dist.dir}"/>

        <jar jarfile="${jar.file}">
            <fileset dir="${build.dir}/classes" includes="**/*.class"/>

            <manifest>
                <attribute name="Version" value="${version}"/>
            </manifest>
        </jar>
    </target>

    <target name="zip-source" depends="compile">
        <mkdir dir="${install.root.dir}"/>

        <mkdir dir="${install.root.dir}/src"/>
        <copy todir="${install.root.dir}/src">
            <fileset dir="${src.dir}">
                <include name="**/*.java"/>
                <include name="**/*.g"/>
                <include name="**/*.st"/>
				<include name="**/*.stg"/>
				<include name="**/STLexer.tokens"/>
            </fileset>
			<fileset dir="${build.antlr3.dir}"/>
        </copy>

        <copy todir="${install.root.dir}">
            <fileset dir=".">
                <include name="build.xml"/>
                <include name="LICENSE.txt"/>
                <include name="README.txt"/>
                <include name="doxyfile"/>
            </fileset>
        </copy>

        <copy todir="${install.root.dir}/lib" file="${antlr3.jar}">
        </copy>

        <zip destfile="${dist.dir}/ST-${version}-src.zip">
            <zipfileset dir="${install.root.dir}" prefix="ST-${version}"/>
        </zip>
    </target>

    <target name="distribute" depends="clean, zip-source, build-jar">
    </target>

</project>
