/** \file
 *  This OBJC source file was generated by $ANTLR version 3.4
 *
 *     -  From the grammar source file : /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g
 *     -                            On : 2012-03-19 17:03:10
 *     -                for the parser : GroupParserParser
 *
 * Editing it, at least manually, is not wise.
 *
 * ObjC language generator and runtime by Alan Condit, acondit|hereisanat|ipns|dotgoeshere|com.
 *
 *
*/
// $ANTLR 3.4 /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g 2012-03-19 17:03:10


/* -----------------------------------------
 * Include the ANTLR3 generated header file.
 */
#import "GroupParser.h"
/* ----------------------------------------- */


/* ============================================================================= */
/* =============================================================================
 * Start of recognizer
 */

#pragma mark Bitsets
static ANTLRBitSet *FOLLOW_oldStyleHeader_in_group166;
static const unsigned long long FOLLOW_oldStyleHeader_in_group166_data[] = { 0x0000000024400010LL};
static ANTLRBitSet *FOLLOW_delimiters_in_group171;
static const unsigned long long FOLLOW_delimiters_in_group171_data[] = { 0x0000000020400010LL};
static ANTLRBitSet *FOLLOW_29_in_group182;
static const unsigned long long FOLLOW_29_in_group182_data[] = { 0x0000000000000040LL};
static ANTLRBitSet *FOLLOW_STRING_in_group184;
static const unsigned long long FOLLOW_STRING_in_group184_data[] = { 0x0000000020400010LL};
static ANTLRBitSet *FOLLOW_29_in_group196;
static const unsigned long long FOLLOW_29_in_group196_data[] = { 0x0000000000000010LL};
static ANTLRBitSet *FOLLOW_ID_in_group225;
static const unsigned long long FOLLOW_ID_in_group225_data[] = { 0x0000000020420010LL};
static ANTLRBitSet *FOLLOW_17_in_group228;
static const unsigned long long FOLLOW_17_in_group228_data[] = { 0x0000000000000010LL};
static ANTLRBitSet *FOLLOW_ID_in_group230;
static const unsigned long long FOLLOW_ID_in_group230_data[] = { 0x0000000020420010LL};
static ANTLRBitSet *FOLLOW_def_in_group254;
static const unsigned long long FOLLOW_def_in_group254_data[] = { 0x0000000000400012LL};
static ANTLRBitSet *FOLLOW_27_in_oldStyleHeader276;
static const unsigned long long FOLLOW_27_in_oldStyleHeader276_data[] = { 0x0000000000000010LL};
static ANTLRBitSet *FOLLOW_ID_in_oldStyleHeader278;
static const unsigned long long FOLLOW_ID_in_oldStyleHeader278_data[] = { 0x0000000010140000LL};
static ANTLRBitSet *FOLLOW_18_in_oldStyleHeader282;
static const unsigned long long FOLLOW_18_in_oldStyleHeader282_data[] = { 0x0000000000000010LL};
static ANTLRBitSet *FOLLOW_ID_in_oldStyleHeader284;
static const unsigned long long FOLLOW_ID_in_oldStyleHeader284_data[] = { 0x0000000010100000LL};
static ANTLRBitSet *FOLLOW_28_in_oldStyleHeader299;
static const unsigned long long FOLLOW_28_in_oldStyleHeader299_data[] = { 0x0000000000000010LL};
static ANTLRBitSet *FOLLOW_ID_in_oldStyleHeader301;
static const unsigned long long FOLLOW_ID_in_oldStyleHeader301_data[] = { 0x0000000000110000LL};
static ANTLRBitSet *FOLLOW_16_in_oldStyleHeader304;
static const unsigned long long FOLLOW_16_in_oldStyleHeader304_data[] = { 0x0000000000000010LL};
static ANTLRBitSet *FOLLOW_ID_in_oldStyleHeader306;
static const unsigned long long FOLLOW_ID_in_oldStyleHeader306_data[] = { 0x0000000000110000LL};
static ANTLRBitSet *FOLLOW_20_in_oldStyleHeader321;
static const unsigned long long FOLLOW_20_in_oldStyleHeader321_data[] = { 0x0000000000000002LL};
static ANTLRBitSet *FOLLOW_ID_in_groupName351;
static const unsigned long long FOLLOW_ID_in_groupName351_data[] = { 0x0000000000020002LL};
static ANTLRBitSet *FOLLOW_17_in_groupName356;
static const unsigned long long FOLLOW_17_in_groupName356_data[] = { 0x0000000000000010LL};
static ANTLRBitSet *FOLLOW_ID_in_groupName360;
static const unsigned long long FOLLOW_ID_in_groupName360_data[] = { 0x0000000000020002LL};
static ANTLRBitSet *FOLLOW_26_in_delimiters381;
static const unsigned long long FOLLOW_26_in_delimiters381_data[] = { 0x0000000000000040LL};
static ANTLRBitSet *FOLLOW_STRING_in_delimiters385;
static const unsigned long long FOLLOW_STRING_in_delimiters385_data[] = { 0x0000000000010000LL};
static ANTLRBitSet *FOLLOW_16_in_delimiters387;
static const unsigned long long FOLLOW_16_in_delimiters387_data[] = { 0x0000000000000040LL};
static ANTLRBitSet *FOLLOW_STRING_in_delimiters391;
static const unsigned long long FOLLOW_STRING_in_delimiters391_data[] = { 0x0000000000000002LL};
static ANTLRBitSet *FOLLOW_templateDef_in_def415;
static const unsigned long long FOLLOW_templateDef_in_def415_data[] = { 0x0000000000000002LL};
static ANTLRBitSet *FOLLOW_dictDef_in_def420;
static const unsigned long long FOLLOW_dictDef_in_def420_data[] = { 0x0000000000000002LL};
static ANTLRBitSet *FOLLOW_22_in_templateDef454;
static const unsigned long long FOLLOW_22_in_templateDef454_data[] = { 0x0000000000000010LL};
static ANTLRBitSet *FOLLOW_ID_in_templateDef458;
static const unsigned long long FOLLOW_ID_in_templateDef458_data[] = { 0x0000000000020000LL};
static ANTLRBitSet *FOLLOW_17_in_templateDef460;
static const unsigned long long FOLLOW_17_in_templateDef460_data[] = { 0x0000000000000010LL};
static ANTLRBitSet *FOLLOW_ID_in_templateDef464;
static const unsigned long long FOLLOW_ID_in_templateDef464_data[] = { 0x0000000000004000LL};
static ANTLRBitSet *FOLLOW_14_in_templateDef466;
static const unsigned long long FOLLOW_14_in_templateDef466_data[] = { 0x0000000000008000LL};
static ANTLRBitSet *FOLLOW_15_in_templateDef468;
static const unsigned long long FOLLOW_15_in_templateDef468_data[] = { 0x0000000000080000LL};
static ANTLRBitSet *FOLLOW_ID_in_templateDef484;
static const unsigned long long FOLLOW_ID_in_templateDef484_data[] = { 0x0000000000004000LL};
static ANTLRBitSet *FOLLOW_14_in_templateDef486;
static const unsigned long long FOLLOW_14_in_templateDef486_data[] = { 0x0000000000008010LL};
static ANTLRBitSet *FOLLOW_formalArgs_in_templateDef488;
static const unsigned long long FOLLOW_formalArgs_in_templateDef488_data[] = { 0x0000000000008000LL};
static ANTLRBitSet *FOLLOW_15_in_templateDef490;
static const unsigned long long FOLLOW_15_in_templateDef490_data[] = { 0x0000000000080000LL};
static ANTLRBitSet *FOLLOW_19_in_templateDef510;
static const unsigned long long FOLLOW_19_in_templateDef510_data[] = { 0x0000000000000C42LL};
static ANTLRBitSet *FOLLOW_STRING_in_templateDef534;
static const unsigned long long FOLLOW_STRING_in_templateDef534_data[] = { 0x0000000000000002LL};
static ANTLRBitSet *FOLLOW_BIGSTRING_in_templateDef554;
static const unsigned long long FOLLOW_BIGSTRING_in_templateDef554_data[] = { 0x0000000000000002LL};
static ANTLRBitSet *FOLLOW_BIGSTRING_NO_NL_in_templateDef571;
static const unsigned long long FOLLOW_BIGSTRING_NO_NL_in_templateDef571_data[] = { 0x0000000000000002LL};
static ANTLRBitSet *FOLLOW_ID_in_templateDef620;
static const unsigned long long FOLLOW_ID_in_templateDef620_data[] = { 0x0000000000080000LL};
static ANTLRBitSet *FOLLOW_19_in_templateDef622;
static const unsigned long long FOLLOW_19_in_templateDef622_data[] = { 0x0000000000000010LL};
static ANTLRBitSet *FOLLOW_ID_in_templateDef626;
static const unsigned long long FOLLOW_ID_in_templateDef626_data[] = { 0x0000000000000002LL};
static ANTLRBitSet *FOLLOW_formalArg_in_formalArgs660;
static const unsigned long long FOLLOW_formalArg_in_formalArgs660_data[] = { 0x0000000000010002LL};
static ANTLRBitSet *FOLLOW_16_in_formalArgs664;
static const unsigned long long FOLLOW_16_in_formalArgs664_data[] = { 0x0000000000000010LL};
static ANTLRBitSet *FOLLOW_formalArg_in_formalArgs666;
static const unsigned long long FOLLOW_formalArg_in_formalArgs666_data[] = { 0x0000000000010002LL};
static ANTLRBitSet *FOLLOW_ID_in_formalArg695;
static const unsigned long long FOLLOW_ID_in_formalArg695_data[] = { 0x0000000000200002LL};
static ANTLRBitSet *FOLLOW_21_in_formalArg709;
static const unsigned long long FOLLOW_21_in_formalArg709_data[] = { 0x00000000000030C0LL};
static ANTLRBitSet *FOLLOW_set_in_formalArg713;
static const unsigned long long FOLLOW_set_in_formalArg713_data[] = { 0x0000000000000002LL};
static ANTLRBitSet *FOLLOW_ID_in_dictDef779;
static const unsigned long long FOLLOW_ID_in_dictDef779_data[] = { 0x0000000000080000LL};
static ANTLRBitSet *FOLLOW_19_in_dictDef781;
static const unsigned long long FOLLOW_19_in_dictDef781_data[] = { 0x0000000000800000LL};
static ANTLRBitSet *FOLLOW_dict_in_dictDef783;
static const unsigned long long FOLLOW_dict_in_dictDef783_data[] = { 0x0000000000000002LL};
static ANTLRBitSet *FOLLOW_23_in_dict821;
static const unsigned long long FOLLOW_23_in_dict821_data[] = { 0x0000000002000040LL};
static ANTLRBitSet *FOLLOW_dictPairs_in_dict823;
static const unsigned long long FOLLOW_dictPairs_in_dict823_data[] = { 0x0000000001000000LL};
static ANTLRBitSet *FOLLOW_24_in_dict826;
static const unsigned long long FOLLOW_24_in_dict826_data[] = { 0x0000000000000002LL};
static ANTLRBitSet *FOLLOW_keyValuePair_in_dictPairs846;
static const unsigned long long FOLLOW_keyValuePair_in_dictPairs846_data[] = { 0x0000000000010002LL};
static ANTLRBitSet *FOLLOW_16_in_dictPairs858;
static const unsigned long long FOLLOW_16_in_dictPairs858_data[] = { 0x0000000000000040LL};
static ANTLRBitSet *FOLLOW_keyValuePair_in_dictPairs860;
static const unsigned long long FOLLOW_keyValuePair_in_dictPairs860_data[] = { 0x0000000000010002LL};
static ANTLRBitSet *FOLLOW_16_in_dictPairs866;
static const unsigned long long FOLLOW_16_in_dictPairs866_data[] = { 0x0000000002000000LL};
static ANTLRBitSet *FOLLOW_defaultValuePair_in_dictPairs868;
static const unsigned long long FOLLOW_defaultValuePair_in_dictPairs868_data[] = { 0x0000000000000002LL};
static ANTLRBitSet *FOLLOW_defaultValuePair_in_dictPairs881;
static const unsigned long long FOLLOW_defaultValuePair_in_dictPairs881_data[] = { 0x0000000000000002LL};
static ANTLRBitSet *FOLLOW_25_in_defaultValuePair911;
static const unsigned long long FOLLOW_25_in_defaultValuePair911_data[] = { 0x0000000000040000LL};
static ANTLRBitSet *FOLLOW_18_in_defaultValuePair913;
static const unsigned long long FOLLOW_18_in_defaultValuePair913_data[] = { 0x0000000000003CD0LL};
static ANTLRBitSet *FOLLOW_keyValue_in_defaultValuePair915;
static const unsigned long long FOLLOW_keyValue_in_defaultValuePair915_data[] = { 0x0000000000000002LL};
static ANTLRBitSet *FOLLOW_STRING_in_keyValuePair937;
static const unsigned long long FOLLOW_STRING_in_keyValuePair937_data[] = { 0x0000000000040000LL};
static ANTLRBitSet *FOLLOW_18_in_keyValuePair939;
static const unsigned long long FOLLOW_18_in_keyValuePair939_data[] = { 0x0000000000003CD0LL};
static ANTLRBitSet *FOLLOW_keyValue_in_keyValuePair941;
static const unsigned long long FOLLOW_keyValue_in_keyValuePair941_data[] = { 0x0000000000000002LL};
static ANTLRBitSet *FOLLOW_BIGSTRING_in_keyValue966;
static const unsigned long long FOLLOW_BIGSTRING_in_keyValue966_data[] = { 0x0000000000000002LL};
static ANTLRBitSet *FOLLOW_BIGSTRING_NO_NL_in_keyValue988;
static const unsigned long long FOLLOW_BIGSTRING_NO_NL_in_keyValue988_data[] = { 0x0000000000000002LL};
static ANTLRBitSet *FOLLOW_ANONYMOUS_TEMPLATE_in_keyValue1004;
static const unsigned long long FOLLOW_ANONYMOUS_TEMPLATE_in_keyValue1004_data[] = { 0x0000000000000002LL};
static ANTLRBitSet *FOLLOW_STRING_in_keyValue1017;
static const unsigned long long FOLLOW_STRING_in_keyValue1017_data[] = { 0x0000000000000002LL};
static ANTLRBitSet *FOLLOW_T_TRUE_in_keyValue1042;
static const unsigned long long FOLLOW_T_TRUE_in_keyValue1042_data[] = { 0x0000000000000002LL};
static ANTLRBitSet *FOLLOW_T_FALSE_in_keyValue1067;
static const unsigned long long FOLLOW_T_FALSE_in_keyValue1067_data[] = { 0x0000000000000002LL};
static ANTLRBitSet *FOLLOW_ID_in_keyValue1094;
static const unsigned long long FOLLOW_ID_in_keyValue1094_data[] = { 0x0000000000000002LL};


#pragma mark Dynamic Global globalAttributeScopeImplementation

#pragma mark Dynamic Rule Scopes ruleAttributeScopeImplementation
@implementation formalArgs_Scope  /* start of ruleAttributeScopeImplementation */
@synthesize hasOptionalParameter; 

+ (formalArgs_Scope *)newformalArgs_Scope
{
return [[formalArgs_Scope alloc] init];
}

- (id) init
{
self = [super init];
return self;
}

/* start of formalArgs_Scope get and set functions */
- (BOOL)gethasOptionalParameter { return( hasOptionalParameter ); }
- (void)sethasOptionalParameter:(BOOL)aVal { hasOptionalParameter = aVal; }

/* End of formalArgs_Scope get and set functions */
@end /* end of ruleAttributeScopeImplementation */



#pragma mark Rule Return Scopes returnScopeImplementation

@implementation GroupParser  // line 637

/* ObjC start of ruleAttributeScope */
#pragma mark Dynamic Rule Scopes ruleAttributeScope
/* ruleAttributeScope */
static SymbolStack *formalArgs_stack;
static formalArgs_Scope *formalArgs_scope;

/* ObjC end of ruleAttributeScope */
#pragma mark global Attribute Scopes globalAttributeScope
/* ObjC start globalAttributeScope */
/* ObjC end globalAttributeScope */
/* ObjC start actions.(actionScope).synthesize */

@synthesize group;

/* ObjC start synthesize() */

+ (void) initialize
{
    #pragma mark Bitsets
    FOLLOW_oldStyleHeader_in_group166 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_oldStyleHeader_in_group166_data Count:(NSUInteger)1] retain];
    FOLLOW_delimiters_in_group171 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_delimiters_in_group171_data Count:(NSUInteger)1] retain];
    FOLLOW_29_in_group182 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_29_in_group182_data Count:(NSUInteger)1] retain];
    FOLLOW_STRING_in_group184 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_STRING_in_group184_data Count:(NSUInteger)1] retain];
    FOLLOW_29_in_group196 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_29_in_group196_data Count:(NSUInteger)1] retain];
    FOLLOW_ID_in_group225 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_ID_in_group225_data Count:(NSUInteger)1] retain];
    FOLLOW_17_in_group228 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_17_in_group228_data Count:(NSUInteger)1] retain];
    FOLLOW_ID_in_group230 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_ID_in_group230_data Count:(NSUInteger)1] retain];
    FOLLOW_def_in_group254 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_def_in_group254_data Count:(NSUInteger)1] retain];
    FOLLOW_27_in_oldStyleHeader276 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_27_in_oldStyleHeader276_data Count:(NSUInteger)1] retain];
    FOLLOW_ID_in_oldStyleHeader278 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_ID_in_oldStyleHeader278_data Count:(NSUInteger)1] retain];
    FOLLOW_18_in_oldStyleHeader282 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_18_in_oldStyleHeader282_data Count:(NSUInteger)1] retain];
    FOLLOW_ID_in_oldStyleHeader284 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_ID_in_oldStyleHeader284_data Count:(NSUInteger)1] retain];
    FOLLOW_28_in_oldStyleHeader299 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_28_in_oldStyleHeader299_data Count:(NSUInteger)1] retain];
    FOLLOW_ID_in_oldStyleHeader301 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_ID_in_oldStyleHeader301_data Count:(NSUInteger)1] retain];
    FOLLOW_16_in_oldStyleHeader304 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_16_in_oldStyleHeader304_data Count:(NSUInteger)1] retain];
    FOLLOW_ID_in_oldStyleHeader306 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_ID_in_oldStyleHeader306_data Count:(NSUInteger)1] retain];
    FOLLOW_20_in_oldStyleHeader321 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_20_in_oldStyleHeader321_data Count:(NSUInteger)1] retain];
    FOLLOW_ID_in_groupName351 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_ID_in_groupName351_data Count:(NSUInteger)1] retain];
    FOLLOW_17_in_groupName356 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_17_in_groupName356_data Count:(NSUInteger)1] retain];
    FOLLOW_ID_in_groupName360 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_ID_in_groupName360_data Count:(NSUInteger)1] retain];
    FOLLOW_26_in_delimiters381 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_26_in_delimiters381_data Count:(NSUInteger)1] retain];
    FOLLOW_STRING_in_delimiters385 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_STRING_in_delimiters385_data Count:(NSUInteger)1] retain];
    FOLLOW_16_in_delimiters387 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_16_in_delimiters387_data Count:(NSUInteger)1] retain];
    FOLLOW_STRING_in_delimiters391 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_STRING_in_delimiters391_data Count:(NSUInteger)1] retain];
    FOLLOW_templateDef_in_def415 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_templateDef_in_def415_data Count:(NSUInteger)1] retain];
    FOLLOW_dictDef_in_def420 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_dictDef_in_def420_data Count:(NSUInteger)1] retain];
    FOLLOW_22_in_templateDef454 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_22_in_templateDef454_data Count:(NSUInteger)1] retain];
    FOLLOW_ID_in_templateDef458 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_ID_in_templateDef458_data Count:(NSUInteger)1] retain];
    FOLLOW_17_in_templateDef460 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_17_in_templateDef460_data Count:(NSUInteger)1] retain];
    FOLLOW_ID_in_templateDef464 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_ID_in_templateDef464_data Count:(NSUInteger)1] retain];
    FOLLOW_14_in_templateDef466 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_14_in_templateDef466_data Count:(NSUInteger)1] retain];
    FOLLOW_15_in_templateDef468 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_15_in_templateDef468_data Count:(NSUInteger)1] retain];
    FOLLOW_ID_in_templateDef484 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_ID_in_templateDef484_data Count:(NSUInteger)1] retain];
    FOLLOW_14_in_templateDef486 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_14_in_templateDef486_data Count:(NSUInteger)1] retain];
    FOLLOW_formalArgs_in_templateDef488 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_formalArgs_in_templateDef488_data Count:(NSUInteger)1] retain];
    FOLLOW_15_in_templateDef490 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_15_in_templateDef490_data Count:(NSUInteger)1] retain];
    FOLLOW_19_in_templateDef510 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_19_in_templateDef510_data Count:(NSUInteger)1] retain];
    FOLLOW_STRING_in_templateDef534 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_STRING_in_templateDef534_data Count:(NSUInteger)1] retain];
    FOLLOW_BIGSTRING_in_templateDef554 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_BIGSTRING_in_templateDef554_data Count:(NSUInteger)1] retain];
    FOLLOW_BIGSTRING_NO_NL_in_templateDef571 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_BIGSTRING_NO_NL_in_templateDef571_data Count:(NSUInteger)1] retain];
    FOLLOW_ID_in_templateDef620 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_ID_in_templateDef620_data Count:(NSUInteger)1] retain];
    FOLLOW_19_in_templateDef622 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_19_in_templateDef622_data Count:(NSUInteger)1] retain];
    FOLLOW_ID_in_templateDef626 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_ID_in_templateDef626_data Count:(NSUInteger)1] retain];
    FOLLOW_formalArg_in_formalArgs660 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_formalArg_in_formalArgs660_data Count:(NSUInteger)1] retain];
    FOLLOW_16_in_formalArgs664 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_16_in_formalArgs664_data Count:(NSUInteger)1] retain];
    FOLLOW_formalArg_in_formalArgs666 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_formalArg_in_formalArgs666_data Count:(NSUInteger)1] retain];
    FOLLOW_ID_in_formalArg695 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_ID_in_formalArg695_data Count:(NSUInteger)1] retain];
    FOLLOW_21_in_formalArg709 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_21_in_formalArg709_data Count:(NSUInteger)1] retain];
    FOLLOW_set_in_formalArg713 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_set_in_formalArg713_data Count:(NSUInteger)1] retain];
    FOLLOW_ID_in_dictDef779 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_ID_in_dictDef779_data Count:(NSUInteger)1] retain];
    FOLLOW_19_in_dictDef781 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_19_in_dictDef781_data Count:(NSUInteger)1] retain];
    FOLLOW_dict_in_dictDef783 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_dict_in_dictDef783_data Count:(NSUInteger)1] retain];
    FOLLOW_23_in_dict821 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_23_in_dict821_data Count:(NSUInteger)1] retain];
    FOLLOW_dictPairs_in_dict823 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_dictPairs_in_dict823_data Count:(NSUInteger)1] retain];
    FOLLOW_24_in_dict826 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_24_in_dict826_data Count:(NSUInteger)1] retain];
    FOLLOW_keyValuePair_in_dictPairs846 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_keyValuePair_in_dictPairs846_data Count:(NSUInteger)1] retain];
    FOLLOW_16_in_dictPairs858 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_16_in_dictPairs858_data Count:(NSUInteger)1] retain];
    FOLLOW_keyValuePair_in_dictPairs860 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_keyValuePair_in_dictPairs860_data Count:(NSUInteger)1] retain];
    FOLLOW_16_in_dictPairs866 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_16_in_dictPairs866_data Count:(NSUInteger)1] retain];
    FOLLOW_defaultValuePair_in_dictPairs868 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_defaultValuePair_in_dictPairs868_data Count:(NSUInteger)1] retain];
    FOLLOW_defaultValuePair_in_dictPairs881 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_defaultValuePair_in_dictPairs881_data Count:(NSUInteger)1] retain];
    FOLLOW_25_in_defaultValuePair911 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_25_in_defaultValuePair911_data Count:(NSUInteger)1] retain];
    FOLLOW_18_in_defaultValuePair913 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_18_in_defaultValuePair913_data Count:(NSUInteger)1] retain];
    FOLLOW_keyValue_in_defaultValuePair915 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_keyValue_in_defaultValuePair915_data Count:(NSUInteger)1] retain];
    FOLLOW_STRING_in_keyValuePair937 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_STRING_in_keyValuePair937_data Count:(NSUInteger)1] retain];
    FOLLOW_18_in_keyValuePair939 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_18_in_keyValuePair939_data Count:(NSUInteger)1] retain];
    FOLLOW_keyValue_in_keyValuePair941 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_keyValue_in_keyValuePair941_data Count:(NSUInteger)1] retain];
    FOLLOW_BIGSTRING_in_keyValue966 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_BIGSTRING_in_keyValue966_data Count:(NSUInteger)1] retain];
    FOLLOW_BIGSTRING_NO_NL_in_keyValue988 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_BIGSTRING_NO_NL_in_keyValue988_data Count:(NSUInteger)1] retain];
    FOLLOW_ANONYMOUS_TEMPLATE_in_keyValue1004 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_ANONYMOUS_TEMPLATE_in_keyValue1004_data Count:(NSUInteger)1] retain];
    FOLLOW_STRING_in_keyValue1017 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_STRING_in_keyValue1017_data Count:(NSUInteger)1] retain];
    FOLLOW_T_TRUE_in_keyValue1042 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_T_TRUE_in_keyValue1042_data Count:(NSUInteger)1] retain];
    FOLLOW_T_FALSE_in_keyValue1067 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_T_FALSE_in_keyValue1067_data Count:(NSUInteger)1] retain];
    FOLLOW_ID_in_keyValue1094 = [[ANTLRBitSet newBitSetWithBits:(const unsigned long long *)FOLLOW_ID_in_keyValue1094_data Count:(NSUInteger)1] retain];

    [BaseRecognizer setTokenNames:[[AMutableArray arrayWithObjects:@"<invalid>", @"<EOR>", @"<DOWN>", @"<UP>", 
 @"ID", @"WS", @"STRING", @"ANONYMOUS_TEMPLATE", @"COMMENT", @"LINE_COMMENT", 
 @"BIGSTRING", @"BIGSTRING_NO_NL", @"T_FALSE", @"T_TRUE", @"'('", @"')'", 
 @"','", @"'.'", @"':'", @"'::='", @"';'", @"'='", @"'@'", @"'['", @"']'", 
 @"'default'", @"'delimiters'", @"'group'", @"'implements'", @"'import'", nil] retain]];
    [BaseRecognizer setGrammarFileName:@"/Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g"];
}

+ (GroupParser *)newGroupParser:(id<TokenStream>)aStream
{
    return [[GroupParser alloc] initWithTokenStream:aStream];
}

- (id) initWithTokenStream:(id<TokenStream>)aStream
{
    self = [super initWithTokenStream:aStream State:[[RecognizerSharedState newRecognizerSharedStateWithRuleLen:14+1] retain]];
    if ( self != nil ) {
        /* ruleAttributeScopeInit */
        formalArgs_scope = [formalArgs_Scope newformalArgs_Scope];
        formalArgs_stack = [SymbolStack newSymbolStackWithLen:30];

        /* start of actions-actionScope-init */
        /* start of init */
    }
    return self;
}

- (void) dealloc
{
    if ( group ) [group release];
    [super dealloc];
}

/* ObjC start actions.(actionScope).methods */

+ (NSInteger) TANONYMOUS_TEMPLATE { return ANONYMOUS_TEMPLATE; }
+ (NSInteger) TBIGSTRING { return BIGSTRING; }
+ (NSInteger) TBIGSTRING_NO_NL { return BIGSTRING_NO_NL; }
+ (NSInteger) TID { return ID; }
+ (NSInteger) TTRUE { return T_TRUE; }
- (void) displayRecognitionError:(AMutableArray *) tokenNames e:(RecognitionException *)e
{
    NSString *msg = [self getErrorMessage:e TokenNames:[self getTokenNames]];
    [group.errMgr groupSyntaxError:SYNTAX_ERROR srcName:[self getSourceName] e:e msg:msg];
}

- (NSString *) getSourceName
{
#ifdef DONTUSENOMO
    NSError **outError;
    NSString *fullFileName = [super getSourceName];
    NSFileWrapper *f = [[NSFileWrapper alloc] initWithURL:fullFileName options:NSFileWrapperReadingImmediate error:outError]; // strip to simple name
    return [f filename];
#endif
    return [super getSourceName];
}

- (void) error:(NSString *)msg
{
    NoViableAltException *nvae = [NoViableAltException newException:0 state:0 stream:input];
    [group.errMgr groupSyntaxError:SYNTAX_ERROR srcName:[self getSourceName] e:nvae msg:msg];
    [self recover:input Exception:nil];
}

- (NSString *) getErrorMessage:(NSException *)e TokenNames:(AMutableArray *)TokenNames
{
    return [NSString stringWithFormat:@"%@--%@", e.name, e.reason];
}


/* ObjC end actions.(actionScope).methods */
/* ObjC start methods() */
/* ObjC end methods() */
/* ObjC start rules */
/*
 * $ANTLR start group
 * /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:209:1: group[STGroup *aGroup, NSString *prefix] : ( oldStyleHeader )? ( delimiters )? ( 'import' STRING | 'import' ID ( '.' ID )* )* ( def[prefix] )+ ;
 */
- (void) group:(STGroup *)aGroup arg1:(NSString *)prefix 
{
    /* ruleScopeSetUp */

    /* ruleDeclarations */


    GroupLexer *lexer = (GroupLexer *)[input getTokenSource];
    self.group = lexer.group = aGroup;

    @try {
        /* ruleLabelDefs entry */
        CommonToken *STRING1 = nil;




        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:214:5: ( ( oldStyleHeader )? ( delimiters )? ( 'import' STRING | 'import' ID ( '.' ID )* )* ( def[prefix] )+ ) // ruleBlockSingleAlt
        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:214:9: ( oldStyleHeader )? ( delimiters )? ( 'import' STRING | 'import' ID ( '.' ID )* )* ( def[prefix] )+ // alt
        {

        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:214:9: ( oldStyleHeader )? // block
        NSInteger alt1=2;
        NSInteger LA1_0 = [input LA:1];

        if ( (LA1_0==27) ) {
            alt1=1;
        }
        switch (alt1) {
            case 1 : ;
                // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:214:9: oldStyleHeader // alt
                {

                /* ruleRef */
                [self pushFollow:FOLLOW_oldStyleHeader_in_group166];
                [self oldStyleHeader];

                [self popFollow];


                 
                }
                break;

        }

         
        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:215:3: ( delimiters )? // block
        NSInteger alt2=2;
        NSInteger LA2_0 = [input LA:1];

        if ( (LA2_0==26) ) {
            alt2=1;
        }
        switch (alt2) {
            case 1 : ;
                // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:215:3: delimiters // alt
                {

                /* ruleRef */
                [self pushFollow:FOLLOW_delimiters_in_group171];
                [self delimiters];

                [self popFollow];


                 
                }
                break;

        }

         

        do {
            NSInteger alt4=3;
            NSInteger LA4_0 = [input LA:1];
            if ( (LA4_0==29) ) {
                NSInteger LA4_2 = [input LA:2];
                if ( (LA4_2==STRING) ) {
                    alt4=1;
                }
                else if ( (LA4_2==ID) ) {
                    alt4=2;
                }


            }


            switch (alt4) {
                case 1 : ;
                    // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:216:9: 'import' STRING // alt
                    {

                    [self match:input TokenType:29 Follow:FOLLOW_29_in_group182]; 
                     
                    STRING1=(CommonToken *)[self match:input TokenType:STRING Follow:FOLLOW_STRING_in_group184]; 
                     

                    [aGroup importTemplatesWithFileName:STRING1];

                     
                    }
                    break;
                case 2 : ;
                    // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:217:9: 'import' ID ( '.' ID )* // alt
                    {

                    [self match:input TokenType:29 Follow:FOLLOW_29_in_group196]; 
                     


                                MismatchedTokenException *mte = [MismatchedTokenException newException:STRING Stream:input];
                                [self reportError:mte];
                                

                     
                    [self match:input TokenType:ID Follow:FOLLOW_ID_in_group225]; 
                     

                    do {
                        NSInteger alt3=2;
                        NSInteger LA3_0 = [input LA:1];
                        if ( (LA3_0==17) ) {
                            alt3=1;
                        }


                        switch (alt3) {
                            case 1 : ;
                                // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:222:17: '.' ID // alt
                                {

                                [self match:input TokenType:17 Follow:FOLLOW_17_in_group228]; 
                                 
                                [self match:input TokenType:ID Follow:FOLLOW_ID_in_group230]; 
                                 
                                }
                                break;

                            default :
                                goto loop3;
                        }
                    } while (YES);
                    loop3: ;

                     
                    }
                    break;

                default :
                    goto loop4;
            }
        } while (YES);
        loop4: ;

         
        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:224:9: ( def[prefix] )+ // positiveClosureBlock
        NSInteger cnt5 = 0;
        do {
            NSInteger alt5 = 2;
            NSInteger LA5_0 = [input LA:1];
            if ( (LA5_0==ID||LA5_0==22) ) {
                alt5=1;
            }


            switch (alt5) {
                case 1 : ;
                    // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:224:9: def[prefix] // alt
                    {

                    /* ruleRef */
                    [self pushFollow:FOLLOW_def_in_group254];
                    [self def:prefix ];

                    [self popFollow];


                     
                    }
                    break;

                default :
                    if ( cnt5 >= 1 )
                        goto loop5;
                    EarlyExitException *eee =
                        [EarlyExitException newException:input decisionNumber:5];
                    @throw eee;
            }
            cnt5++;
        } while (YES);
        loop5: ;

         
        }

        /* token+rule list labels */

    }
    @catch (RecognitionException *re) {
        [self reportError:re];
        [self recover:input Exception:re];
    }

    @finally {
        /* ruleScopeCleanUp */

    }
    return ;
}
/* $ANTLR end group */

/*
 * $ANTLR start oldStyleHeader
 * /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:227:1: oldStyleHeader : 'group' ID ( ':' ID )? ( 'implements' ID ( ',' ID )* )? ';' ;
 */
- (void) oldStyleHeader
{
    /* ruleScopeSetUp */

    /* ruleDeclarations */

    @try {
        /* ruleLabelDefs entry */





        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:228:5: ( 'group' ID ( ':' ID )? ( 'implements' ID ( ',' ID )* )? ';' ) // ruleBlockSingleAlt
        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:228:9: 'group' ID ( ':' ID )? ( 'implements' ID ( ',' ID )* )? ';' // alt
        {

        [self match:input TokenType:27 Follow:FOLLOW_27_in_oldStyleHeader276]; 
         
        [self match:input TokenType:ID Follow:FOLLOW_ID_in_oldStyleHeader278]; 
         
        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:228:20: ( ':' ID )? // block
        NSInteger alt6=2;
        NSInteger LA6_0 = [input LA:1];

        if ( (LA6_0==18) ) {
            alt6=1;
        }
        switch (alt6) {
            case 1 : ;
                // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:228:22: ':' ID // alt
                {

                [self match:input TokenType:18 Follow:FOLLOW_18_in_oldStyleHeader282]; 
                 
                [self match:input TokenType:ID Follow:FOLLOW_ID_in_oldStyleHeader284]; 
                 
                }
                break;

        }

         
        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:229:9: ( 'implements' ID ( ',' ID )* )? // block
        NSInteger alt8=2;
        NSInteger LA8_0 = [input LA:1];

        if ( (LA8_0==28) ) {
            alt8=1;
        }
        switch (alt8) {
            case 1 : ;
                // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:229:11: 'implements' ID ( ',' ID )* // alt
                {

                [self match:input TokenType:28 Follow:FOLLOW_28_in_oldStyleHeader299]; 
                 
                [self match:input TokenType:ID Follow:FOLLOW_ID_in_oldStyleHeader301]; 
                 

                do {
                    NSInteger alt7=2;
                    NSInteger LA7_0 = [input LA:1];
                    if ( (LA7_0==16) ) {
                        alt7=1;
                    }


                    switch (alt7) {
                        case 1 : ;
                            // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:229:28: ',' ID // alt
                            {

                            [self match:input TokenType:16 Follow:FOLLOW_16_in_oldStyleHeader304]; 
                             
                            [self match:input TokenType:ID Follow:FOLLOW_ID_in_oldStyleHeader306]; 
                             
                            }
                            break;

                        default :
                            goto loop7;
                    }
                } while (YES);
                loop7: ;

                 
                }
                break;

        }

         
        [self match:input TokenType:20 Follow:FOLLOW_20_in_oldStyleHeader321]; 
         
        }

        /* token+rule list labels */

    }
    @catch (RecognitionException *re) {
        [self reportError:re];
        [self recover:input Exception:re];
    }

    @finally {
        /* ruleScopeCleanUp */

    }
    return ;
}
/* $ANTLR end oldStyleHeader */

/*
 * $ANTLR start groupName
 * /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:233:1: groupName returns [NSString *name] : a= ID ( '.' a= ID )* ;
 */
- (NSString *) groupName
{
    /* ruleScopeSetUp */

    /* ruleDeclarations */
    NSString * name = nil ;


    NSMutableString *buf = [NSMutableString stringWithCapacity:16];
    @try {
        /* ruleLabelDefs entry */
        CommonToken *a = nil;




        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:235:5: (a= ID ( '.' a= ID )* ) // ruleBlockSingleAlt
        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:235:9: a= ID ( '.' a= ID )* // alt
        {

        a=(CommonToken *)[self match:input TokenType:ID Follow:FOLLOW_ID_in_groupName351]; 
         

        [buf appendString:(a!=nil?a.text:nil)];

         

        do {
            NSInteger alt9=2;
            NSInteger LA9_0 = [input LA:1];
            if ( (LA9_0==17) ) {
                alt9=1;
            }


            switch (alt9) {
                case 1 : ;
                    // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:235:45: '.' a= ID // alt
                    {

                    [self match:input TokenType:17 Follow:FOLLOW_17_in_groupName356]; 
                     
                    a=(CommonToken *)[self match:input TokenType:ID Follow:FOLLOW_ID_in_groupName360]; 
                     

                    [buf appendString:(a!=nil?a.text:nil)];

                     
                    }
                    break;

                default :
                    goto loop9;
            }
        } while (YES);
        loop9: ;

         
        }

        /* token+rule list labels */

    }
    @catch (RecognitionException *re) {
        [self reportError:re];
        [self recover:input Exception:re];
    }

    @finally {
        /* ruleScopeCleanUp */

    }
    return name;
}
/* $ANTLR end groupName */

/*
 * $ANTLR start delimiters
 * /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:238:1: delimiters : 'delimiters' a= STRING ',' b= STRING ;
 */
- (void) delimiters
{
    /* ruleScopeSetUp */

    /* ruleDeclarations */

    @try {
        /* ruleLabelDefs entry */
        CommonToken *a = nil;
        CommonToken *b = nil;




        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:239:5: ( 'delimiters' a= STRING ',' b= STRING ) // ruleBlockSingleAlt
        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:239:7: 'delimiters' a= STRING ',' b= STRING // alt
        {

        [self match:input TokenType:26 Follow:FOLLOW_26_in_delimiters381]; 
         
        a=(CommonToken *)[self match:input TokenType:STRING Follow:FOLLOW_STRING_in_delimiters385]; 
         
        [self match:input TokenType:16 Follow:FOLLOW_16_in_delimiters387]; 
         
        b=(CommonToken *)[self match:input TokenType:STRING Follow:FOLLOW_STRING_in_delimiters391]; 
         


             	group.delimiterStartChar=[(a!=nil?a.text:nil) characterAtIndex:0];
                group.delimiterStopChar=[(b!=nil?b.text:nil) characterAtIndex:0];
                

         
        }

        /* token+rule list labels */

    }
    @catch (RecognitionException *re) {
        [self reportError:re];
        [self recover:input Exception:re];
    }

    @finally {
        /* ruleScopeCleanUp */

    }
    return ;
}
/* $ANTLR end delimiters */

/*
 * $ANTLR start def
 * /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:250:1: def[NSString *prefix] : ( templateDef[prefix] | dictDef );
 */
- (void) def:(NSString *)prefix 
{
    /* ruleScopeSetUp */

    /* ruleDeclarations */

    @try {
        /* ruleLabelDefs entry */





        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:250:23: ( templateDef[prefix] | dictDef ) //ruleblock
        NSInteger alt10=2;
        NSInteger LA10_0 = [input LA:1];

        if ( (LA10_0==22) ) {
            alt10=1;
        }
        else if ( (LA10_0==ID) ) {
            NSInteger LA10_2 = [input LA:2];

            if ( (LA10_2==14) ) {
                alt10=1;
            }
            else if ( (LA10_2==19) ) {
                NSInteger LA10_3 = [input LA:3];

                if ( (LA10_3==ID) ) {
                    alt10=1;
                }
                else if ( (LA10_3==23) ) {
                    alt10=2;
                }
                else {
                    NoViableAltException *nvae = [NoViableAltException newException:10 state:3 stream:input];
                    nvae.c = LA10_3;
                    @throw nvae;

                }
            }
            else {
                NoViableAltException *nvae = [NoViableAltException newException:10 state:2 stream:input];
                nvae.c = LA10_2;
                @throw nvae;

            }
        }
        else {
            NoViableAltException *nvae = [NoViableAltException newException:10 state:0 stream:input];
            nvae.c = LA10_0;
            @throw nvae;

        }
        switch (alt10) {
            case 1 : ;
                // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:250:25: templateDef[prefix] // alt
                {

                /* ruleRef */
                [self pushFollow:FOLLOW_templateDef_in_def415];
                [self templateDef:prefix ];

                [self popFollow];


                 
                }
                break;
            case 2 : ;
                // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:250:47: dictDef // alt
                {

                /* ruleRef */
                [self pushFollow:FOLLOW_dictDef_in_def420];
                [self dictDef];

                [self popFollow];


                 
                }
                break;

        }
        /* token+rule list labels */

    }
    @catch (RecognitionException *re) {

                // pretend we already saw an error here
                state.lastErrorIndex = input.index;
                [self error:[NSString stringWithFormat:@"garbled template definition starting at '%@'", [[input LT:1] text]]];
            
    }

    @finally {
        /* ruleScopeCleanUp */

    }
    return ;
}
/* $ANTLR end def */

/*
 * $ANTLR start templateDef
 * /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:257:1: templateDef[NSString *prefix] : ( ( '@' enclosing= ID '.' name= ID '(' ')' |name= ID '(' formalArgs ')' ) '::=' ( STRING | BIGSTRING | BIGSTRING_NO_NL |) |alias= ID '::=' target= ID );
 */
- (void) templateDef:(NSString *)prefix 
{
    /* ruleScopeSetUp */

    /* ruleDeclarations */


        NSString *template=nil;
        NSInteger n=0; // num char to strip from left, right of template def

    @try {
        /* ruleLabelDefs entry */
        CommonToken *enclosing = nil;
        CommonToken *name = nil;
        CommonToken *alias = nil;
        CommonToken *target = nil;
        CommonToken *STRING2 = nil;
        CommonToken *BIGSTRING3 = nil;
        CommonToken *BIGSTRING_NO_NL4 = nil;

        AMutableArray * formalArgs5 = nil ;



        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:262:5: ( ( '@' enclosing= ID '.' name= ID '(' ')' |name= ID '(' formalArgs ')' ) '::=' ( STRING | BIGSTRING | BIGSTRING_NO_NL |) |alias= ID '::=' target= ID ) //ruleblock
        NSInteger alt13=2;
        NSInteger LA13_0 = [input LA:1];

        if ( (LA13_0==22) ) {
            alt13=1;
        }
        else if ( (LA13_0==ID) ) {
            NSInteger LA13_2 = [input LA:2];

            if ( (LA13_2==14) ) {
                alt13=1;
            }
            else if ( (LA13_2==19) ) {
                alt13=2;
            }
            else {
                NoViableAltException *nvae = [NoViableAltException newException:13 state:2 stream:input];
                nvae.c = LA13_2;
                @throw nvae;

            }
        }
        else {
            NoViableAltException *nvae = [NoViableAltException newException:13 state:0 stream:input];
            nvae.c = LA13_0;
            @throw nvae;

        }
        switch (alt13) {
            case 1 : ;
                // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:262:9: ( '@' enclosing= ID '.' name= ID '(' ')' |name= ID '(' formalArgs ')' ) '::=' ( STRING | BIGSTRING | BIGSTRING_NO_NL |) // alt
                {

                // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:262:9: ( '@' enclosing= ID '.' name= ID '(' ')' |name= ID '(' formalArgs ')' ) // block
                NSInteger alt11=2;
                NSInteger LA11_0 = [input LA:1];

                if ( (LA11_0==22) ) {
                    alt11=1;
                }
                else if ( (LA11_0==ID) ) {
                    alt11=2;
                }
                else {
                    NoViableAltException *nvae = [NoViableAltException newException:11 state:0 stream:input];
                    nvae.c = LA11_0;
                    @throw nvae;

                }
                switch (alt11) {
                    case 1 : ;
                        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:262:13: '@' enclosing= ID '.' name= ID '(' ')' // alt
                        {

                        [self match:input TokenType:22 Follow:FOLLOW_22_in_templateDef454]; 
                         
                        enclosing=(CommonToken *)[self match:input TokenType:ID Follow:FOLLOW_ID_in_templateDef458]; 
                         
                        [self match:input TokenType:17 Follow:FOLLOW_17_in_templateDef460]; 
                         
                        name=(CommonToken *)[self match:input TokenType:ID Follow:FOLLOW_ID_in_templateDef464]; 
                         
                        [self match:input TokenType:14 Follow:FOLLOW_14_in_templateDef466]; 
                         
                        [self match:input TokenType:15 Follow:FOLLOW_15_in_templateDef468]; 
                         
                        }
                        break;
                    case 2 : ;
                        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:263:13: name= ID '(' formalArgs ')' // alt
                        {

                        name=(CommonToken *)[self match:input TokenType:ID Follow:FOLLOW_ID_in_templateDef484]; 
                         
                        [self match:input TokenType:14 Follow:FOLLOW_14_in_templateDef486]; 
                         
                        /* ruleRef */
                        [self pushFollow:FOLLOW_formalArgs_in_templateDef488];
                        formalArgs5 = [self formalArgs];

                        [self popFollow];


                         
                        [self match:input TokenType:15 Follow:FOLLOW_15_in_templateDef490]; 
                         
                        }
                        break;

                }

                 
                [self match:input TokenType:19 Follow:FOLLOW_19_in_templateDef510]; 
                 

                CommonToken *templateToken = [input LT:1];

                 
                // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:267:9: ( STRING | BIGSTRING | BIGSTRING_NO_NL |) // block
                NSInteger alt12=4;
                unichar charLA12 = [input LA:1];
                switch (charLA12) {
                    case STRING: ;
                        {
                        alt12=1;
                        }
                        break;
                    case BIGSTRING: ;
                        {
                        alt12=2;
                        }
                        break;
                    case BIGSTRING_NO_NL: ;
                        {
                        alt12=3;
                        }
                        break;
                    case EOF: ;
                    case ID: ;
                    case 22: ;
                        {
                        alt12=4;
                        }
                        break;

                default: ;
                    NoViableAltException *nvae = [NoViableAltException newException:12 state:0 stream:input];
                    nvae.c = charLA12;
                    @throw nvae;

                }

                switch (alt12) {
                    case 1 : ;
                        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:267:13: STRING // alt
                        {

                        STRING2=(CommonToken *)[self match:input TokenType:STRING Follow:FOLLOW_STRING_in_templateDef534]; 
                         

                        template=(STRING2!=nil?STRING2.text:nil); n=1;

                         
                        }
                        break;
                    case 2 : ;
                        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:268:13: BIGSTRING // alt
                        {

                        BIGSTRING3=(CommonToken *)[self match:input TokenType:BIGSTRING Follow:FOLLOW_BIGSTRING_in_templateDef554]; 
                         

                        template=(BIGSTRING3!=nil?BIGSTRING3.text:nil); n=2;

                         
                        }
                        break;
                    case 3 : ;
                        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:269:13: BIGSTRING_NO_NL // alt
                        {

                        BIGSTRING_NO_NL4=(CommonToken *)[self match:input TokenType:BIGSTRING_NO_NL Follow:FOLLOW_BIGSTRING_NO_NL_in_templateDef571]; 
                         

                        template=(BIGSTRING_NO_NL4!=nil?BIGSTRING_NO_NL4.text:nil); n=2;

                         
                        }
                        break;
                    case 4 : ;
                        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:270:13:  // alt
                        {



                                    template = @"";
                                    NSString *msg = [NSString stringWithFormat:@"missing template at '%@'", [[input LT:1] text]];
                                    NoViableAltException *e = [NoViableAltException newException:0 state:0 stream:input];
                                    [group.errMgr groupSyntaxError:SYNTAX_ERROR srcName:[self getSourceName] e:e msg:msg];
                                    

                         
                        }
                        break;

                }

                 


                        if ( (name!=nil?[name getTokenIndex]:0) >= 0 ) { // if ID missing
                            template = [Misc strip:template n:n];
                            NSString *templateName = (name!=nil?name.text:nil);
                            if ( [prefix length] > 0 ) templateName = [NSString stringWithFormat: @"%@%@", prefix, (name!=nil?name.text:nil)];
                            [group defineTemplateOrRegion:templateName
                            regionSurroundingTemplateName:(enclosing!=nil?enclosing.text:nil)
                                            templateToken:templateToken
                                                 template:template
                                                nameToken:name
                                                     args:formalArgs5];
                        }
                }
                break;
            case 2 : ;
                // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:290:9: alias= ID '::=' target= ID // alt
                {

                alias=(CommonToken *)[self match:input TokenType:ID Follow:FOLLOW_ID_in_templateDef620]; 
                 
                [self match:input TokenType:19 Follow:FOLLOW_19_in_templateDef622]; 
                 
                target=(CommonToken *)[self match:input TokenType:ID Follow:FOLLOW_ID_in_templateDef626]; 
                 

                [group defineTemplateAlias:alias targetT:target];

                 
                }
                break;

        }
        /* token+rule list labels */

    }
    @catch (RecognitionException *re) {
        [self reportError:re];
        [self recover:input Exception:re];
    }

    @finally {
        /* ruleScopeCleanUp */

    }
    return ;
}
/* $ANTLR end templateDef */

/*
 * $ANTLR start formalArgs
 * /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:293:1: formalArgs returns [AMutableArray *args = [AMutableArray arrayWithCapacity:5]] : ( formalArg[$args] ( ',' formalArg[$args] )* |);
 */
- (AMutableArray *) formalArgs
{
    /* ruleScopeSetUp */
    [formalArgs_stack push:[formalArgs_Scope newformalArgs_Scope]];
    /* ruleDeclarations */
    AMutableArray * args =  [AMutableArray arrayWithCapacity:5];


     /* scopeSetAttributeRef */((formalArgs_Scope *)[formalArgs_stack peek]).hasOptionalParameter =  NO;
    @try {
        /* ruleLabelDefs entry */





        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:298:5: ( formalArg[$args] ( ',' formalArg[$args] )* |) //ruleblock
        NSInteger alt15=2;
        NSInteger LA15_0 = [input LA:1];

        if ( (LA15_0==ID) ) {
            alt15=1;
        }
        else if ( (LA15_0==15) ) {
            alt15=2;
        }
        else {
            NoViableAltException *nvae = [NoViableAltException newException:15 state:0 stream:input];
            nvae.c = LA15_0;
            @throw nvae;

        }
        switch (alt15) {
            case 1 : ;
                // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:298:9: formalArg[$args] ( ',' formalArg[$args] )* // alt
                {

                /* ruleRef */
                [self pushFollow:FOLLOW_formalArg_in_formalArgs660];
                [self formalArg:args
                 ];

                [self popFollow];


                 

                do {
                    NSInteger alt14=2;
                    NSInteger LA14_0 = [input LA:1];
                    if ( (LA14_0==16) ) {
                        alt14=1;
                    }


                    switch (alt14) {
                        case 1 : ;
                            // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:298:27: ',' formalArg[$args] // alt
                            {

                            [self match:input TokenType:16 Follow:FOLLOW_16_in_formalArgs664]; 
                             
                            /* ruleRef */
                            [self pushFollow:FOLLOW_formalArg_in_formalArgs666];
                            [self formalArg:args
                             ];

                            [self popFollow];


                             
                            }
                            break;

                        default :
                            goto loop14;
                    }
                } while (YES);
                loop14: ;

                 
                }
                break;
            case 2 : ;
                // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:300:5:  // alt
                {
                }
                break;

        }
        /* token+rule list labels */

    }
    @catch (RecognitionException *re) {
        [self reportError:re];
        [self recover:input Exception:re];
    }

    @finally {
        /* ruleScopeCleanUp */
        [formalArgs_stack pop];
    }
    return args;
}
/* $ANTLR end formalArgs */

/*
 * $ANTLR start formalArg
 * /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:302:1: formalArg[AMutableArray *args] : ID ( '=' a= ( STRING | ANONYMOUS_TEMPLATE | T_TRUE | T_FALSE ) |) ;
 */
- (void) formalArg:(AMutableArray *)args 
{
    /* ruleScopeSetUp */

    /* ruleDeclarations */

    @try {
        /* ruleLabelDefs entry */
        CommonToken *a = nil;
        CommonToken *ID6 = nil;




        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:303:5: ( ID ( '=' a= ( STRING | ANONYMOUS_TEMPLATE | T_TRUE | T_FALSE ) |) ) // ruleBlockSingleAlt
        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:303:9: ID ( '=' a= ( STRING | ANONYMOUS_TEMPLATE | T_TRUE | T_FALSE ) |) // alt
        {

        ID6=(CommonToken *)[self match:input TokenType:ID Follow:FOLLOW_ID_in_formalArg695]; 
         
        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:304:9: ( '=' a= ( STRING | ANONYMOUS_TEMPLATE | T_TRUE | T_FALSE ) |) // block
        NSInteger alt16=2;
        NSInteger LA16_0 = [input LA:1];

        if ( (LA16_0==21) ) {
            alt16=1;
        }
        else if ( ((LA16_0 >= 15 && LA16_0 <= 16)) ) {
            alt16=2;
        }
        else {
            NoViableAltException *nvae = [NoViableAltException newException:16 state:0 stream:input];
            nvae.c = LA16_0;
            @throw nvae;

        }
        switch (alt16) {
            case 1 : ;
                // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:304:13: '=' a= ( STRING | ANONYMOUS_TEMPLATE | T_TRUE | T_FALSE ) // alt
                {

                [self match:input TokenType:21 Follow:FOLLOW_21_in_formalArg709]; 
                 

                a = (CommonToken *)[input LT:1]; /* matchSet */

                if ((([input LA:1] >= STRING) && ([input LA:1] <= ANONYMOUS_TEMPLATE))||(([input LA:1] >= T_FALSE) && ([input LA:1] <= T_TRUE))) {
                    [input consume];
                    [state setIsErrorRecovery:NO];
                } else {
                    MismatchedSetException *mse = [MismatchedSetException newException:nil stream:input];
                    @throw mse;
                }

                 

                /* scopeSetAttributeRef */((formalArgs_Scope *)[formalArgs_stack peek]).hasOptionalParameter =  YES;

                 
                }
                break;
            case 2 : ;
                // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:305:13:  // alt
                {



                            if ( ((formalArgs_Scope *)[formalArgs_stack peek]).hasOptionalParameter ) {
                                [group.errMgr compileTimeError:REQUIRED_PARAMETER_AFTER_OPTIONAL templateToken:nil t:ID6];
                            }
                            

                 
                }
                break;

        }

         

        [args addObject:[[FormalArgument newFormalArgument:(ID6!=nil?ID6.text:nil) token:a] retain]];

         
        }

        /* token+rule list labels */

    }
    @catch (RecognitionException *re) {
        [self reportError:re];
        [self recover:input Exception:re];
    }

    @finally {
        /* ruleScopeCleanUp */

    }
    return ;
}
/* $ANTLR end formalArg */

/*
 * $ANTLR start dictDef
 * /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:323:1: dictDef : ID '::=' dict ;
 */
- (void) dictDef
{
    /* ruleScopeSetUp */

    /* ruleDeclarations */

    @try {
        /* ruleLabelDefs entry */
        CommonToken *ID7 = nil;

        AMutableDictionary * dict8 = nil ;



        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:324:5: ( ID '::=' dict ) // ruleBlockSingleAlt
        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:324:9: ID '::=' dict // alt
        {

        ID7=(CommonToken *)[self match:input TokenType:ID Follow:FOLLOW_ID_in_dictDef779]; 
         
        [self match:input TokenType:19 Follow:FOLLOW_19_in_dictDef781]; 
         
        /* ruleRef */
        [self pushFollow:FOLLOW_dict_in_dictDef783];
        dict8 = [self dict];

        [self popFollow];


         


                if ( [group rawGetDictionary:(ID7!=nil?ID7.text:nil)] != nil ) {
                    [group.errMgr compileTimeError:MAP_REDEFINITION templateToken:nil t:ID7];
                }
                else if ( [group rawGetTemplate:(ID7!=nil?ID7.text:nil)] != nil ) {
                    [group.errMgr compileTimeError:TEMPLATE_REDEFINITION_AS_MAP templateToken:nil t:ID7];
                }
                else {
                    [group defineDictionary:(ID7!=nil?ID7.text:nil) mapping:
        dict8
        ];
                }
                

         
        }

        /* token+rule list labels */

    }
    @catch (RecognitionException *re) {
        [self reportError:re];
        [self recover:input Exception:re];
    }

    @finally {
        /* ruleScopeCleanUp */

    }
    return ;
}
/* $ANTLR end dictDef */

/*
 * $ANTLR start dict
 * /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:338:1: dict returns [AMutableDictionary *mapping] : '[' dictPairs[mapping] ']' ;
 */
- (AMutableDictionary *) dict
{
    /* ruleScopeSetUp */

    /* ruleDeclarations */
    AMutableDictionary * mapping = nil ;


    mapping=[AMutableDictionary dictionaryWithCapacity:16];
    @try {
        /* ruleLabelDefs entry */





        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:340:5: ( '[' dictPairs[mapping] ']' ) // ruleBlockSingleAlt
        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:340:9: '[' dictPairs[mapping] ']' // alt
        {

        [self match:input TokenType:23 Follow:FOLLOW_23_in_dict821]; 
         
        /* ruleRef */
        [self pushFollow:FOLLOW_dictPairs_in_dict823];
        [self dictPairs:mapping ];

        [self popFollow];


         
        [self match:input TokenType:24 Follow:FOLLOW_24_in_dict826]; 
         
        }

        /* token+rule list labels */

    }
    @catch (RecognitionException *re) {
        [self reportError:re];
        [self recover:input Exception:re];
    }

    @finally {
        /* ruleScopeCleanUp */

    }
    return mapping;
}
/* $ANTLR end dict */

/*
 * $ANTLR start dictPairs
 * /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:343:1: dictPairs[AMutableDictionary *mapping] : ( keyValuePair[mapping] ( ',' keyValuePair[mapping] )* ( ',' defaultValuePair[mapping] )? | defaultValuePair[mapping] );
 */
- (void) dictPairs:(AMutableDictionary *)mapping 
{
    /* ruleScopeSetUp */

    /* ruleDeclarations */

    @try {
        /* ruleLabelDefs entry */





        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:344:5: ( keyValuePair[mapping] ( ',' keyValuePair[mapping] )* ( ',' defaultValuePair[mapping] )? | defaultValuePair[mapping] ) //ruleblock
        NSInteger alt19=2;
        NSInteger LA19_0 = [input LA:1];

        if ( (LA19_0==STRING) ) {
            alt19=1;
        }
        else if ( (LA19_0==25) ) {
            alt19=2;
        }
        else {
            NoViableAltException *nvae = [NoViableAltException newException:19 state:0 stream:input];
            nvae.c = LA19_0;
            @throw nvae;

        }
        switch (alt19) {
            case 1 : ;
                // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:344:9: keyValuePair[mapping] ( ',' keyValuePair[mapping] )* ( ',' defaultValuePair[mapping] )? // alt
                {

                /* ruleRef */
                [self pushFollow:FOLLOW_keyValuePair_in_dictPairs846];
                [self keyValuePair:mapping ];

                [self popFollow];


                 

                do {
                    NSInteger alt17=2;
                    NSInteger LA17_0 = [input LA:1];
                    if ( (LA17_0==16) ) {
                        NSInteger LA17_1 = [input LA:2];
                        if ( (LA17_1==STRING) ) {
                            alt17=1;
                        }


                    }


                    switch (alt17) {
                        case 1 : ;
                            // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:345:10: ',' keyValuePair[mapping] // alt
                            {

                            [self match:input TokenType:16 Follow:FOLLOW_16_in_dictPairs858]; 
                             
                            /* ruleRef */
                            [self pushFollow:FOLLOW_keyValuePair_in_dictPairs860];
                            [self keyValuePair:mapping ];

                            [self popFollow];


                             
                            }
                            break;

                        default :
                            goto loop17;
                    }
                } while (YES);
                loop17: ;

                 
                // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:345:38: ( ',' defaultValuePair[mapping] )? // block
                NSInteger alt18=2;
                NSInteger LA18_0 = [input LA:1];

                if ( (LA18_0==16) ) {
                    alt18=1;
                }
                switch (alt18) {
                    case 1 : ;
                        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:345:39: ',' defaultValuePair[mapping] // alt
                        {

                        [self match:input TokenType:16 Follow:FOLLOW_16_in_dictPairs866]; 
                         
                        /* ruleRef */
                        [self pushFollow:FOLLOW_defaultValuePair_in_dictPairs868];
                        [self defaultValuePair:mapping ];

                        [self popFollow];


                         
                        }
                        break;

                }

                 
                }
                break;
            case 2 : ;
                // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:346:9: defaultValuePair[mapping] // alt
                {

                /* ruleRef */
                [self pushFollow:FOLLOW_defaultValuePair_in_dictPairs881];
                [self defaultValuePair:mapping ];

                [self popFollow];


                 
                }
                break;

        }
        /* token+rule list labels */

    }
    @catch (RecognitionException *re) {

                [self error:[NSString stringWithFormat:@"missing dictionary entry at '%@'", [input LT:1].text]];
            
    }

    @finally {
        /* ruleScopeCleanUp */

    }
    return ;
}
/* $ANTLR end dictPairs */

/*
 * $ANTLR start defaultValuePair
 * /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:352:1: defaultValuePair[AMutableDictionary *mapping] : 'default' ':' keyValue ;
 */
- (void) defaultValuePair:(AMutableDictionary *)mapping 
{
    /* ruleScopeSetUp */

    /* ruleDeclarations */

    @try {
        /* ruleLabelDefs entry */


        id keyValue9 = nil ;



        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:353:5: ( 'default' ':' keyValue ) // ruleBlockSingleAlt
        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:353:9: 'default' ':' keyValue // alt
        {

        [self match:input TokenType:25 Follow:FOLLOW_25_in_defaultValuePair911]; 
         
        [self match:input TokenType:18 Follow:FOLLOW_18_in_defaultValuePair913]; 
         
        /* ruleRef */
        [self pushFollow:FOLLOW_keyValue_in_defaultValuePair915];
        keyValue9 = [self keyValue];

        [self popFollow];

        [mapping setObject:keyValue9 forKey:STGroup.DEFAULT_KEY];
        }

        /* token+rule list labels */

    }
    @catch (RecognitionException *re) {
        [self reportError:re];
        [self recover:input Exception:re];
    }

    @finally {
        /* ruleScopeCleanUp */

    }
    return ;
}
/* $ANTLR end defaultValuePair */

/*
 * $ANTLR start keyValuePair
 * /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:356:1: keyValuePair[AMutableDictionary *mapping] : STRING ':' keyValue ;
 */
- (void) keyValuePair:(AMutableDictionary *)mapping 
{
    /* ruleScopeSetUp */

    /* ruleDeclarations */

    @try {
        /* ruleLabelDefs entry */
        CommonToken *STRING11 = nil;

        id keyValue10 = nil ;



        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:357:5: ( STRING ':' keyValue ) // ruleBlockSingleAlt
        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:357:9: STRING ':' keyValue // alt
        {

        STRING11=(CommonToken *)[self match:input TokenType:STRING Follow:FOLLOW_STRING_in_keyValuePair937]; 
         
        [self match:input TokenType:18 Follow:FOLLOW_18_in_keyValuePair939]; 
         
        /* ruleRef */
        [self pushFollow:FOLLOW_keyValue_in_keyValuePair941];
        keyValue10 = [self keyValue];

        [self popFollow];


         

        [mapping setObject:keyValue10
         forKey:[Misc replaceEscapes:[Misc strip:(STRING11!=nil?STRING11.text:nil) n:1]]];

         
        }

        /* token+rule list labels */

    }
    @catch (RecognitionException *re) {
        [self reportError:re];
        [self recover:input Exception:re];
    }

    @finally {
        /* ruleScopeCleanUp */

    }
    return ;
}
/* $ANTLR end keyValuePair */

/*
 * $ANTLR start keyValue
 * /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:360:1: keyValue returns [id value] : ( BIGSTRING | BIGSTRING_NO_NL | ANONYMOUS_TEMPLATE | STRING | T_TRUE | T_FALSE |{...}? => ID );
 */
- (id) keyValue
{
    /* ruleScopeSetUp */

    /* ruleDeclarations */
    id value = nil ;


    @try {
        /* ruleLabelDefs entry */
        CommonToken *BIGSTRING12 = nil;
        CommonToken *BIGSTRING_NO_NL13 = nil;
        CommonToken *ANONYMOUS_TEMPLATE14 = nil;
        CommonToken *STRING15 = nil;




        // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:361:5: ( BIGSTRING | BIGSTRING_NO_NL | ANONYMOUS_TEMPLATE | STRING | T_TRUE | T_FALSE |{...}? => ID ) //ruleblock
        NSInteger alt20=7;
        NSInteger LA20_0 = [input LA:1];

        if ( (LA20_0==BIGSTRING) ) {
            alt20=1;
        }
        else if ( (LA20_0==BIGSTRING_NO_NL) ) {
            alt20=2;
        }
        else if ( (LA20_0==ANONYMOUS_TEMPLATE) ) {
            alt20=3;
        }
        else if ( (LA20_0==STRING) ) {
            alt20=4;
        }
        else if ( (LA20_0==T_TRUE) ) {
            alt20=5;
        }
        else if ( (LA20_0==T_FALSE) ) {
            alt20=6;
        }
        else if ( (LA20_0==ID) && (([[[input LT:1] text] isEqualToString:@"key"]))) {
            alt20=7;
        }
        else {
            NoViableAltException *nvae = [NoViableAltException newException:20 state:0 stream:input];
            nvae.c = LA20_0;
            @throw nvae;

        }
        switch (alt20) {
            case 1 : ;
                // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:361:9: BIGSTRING // alt
                {

                BIGSTRING12=(CommonToken *)[self match:input TokenType:BIGSTRING Follow:FOLLOW_BIGSTRING_in_keyValue966]; 
                 

                value =  [group createSingleton:BIGSTRING12];


                 
                }
                break;
            case 2 : ;
                // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:362:9: BIGSTRING_NO_NL // alt
                {

                BIGSTRING_NO_NL13=(CommonToken *)[self match:input TokenType:BIGSTRING_NO_NL Follow:FOLLOW_BIGSTRING_NO_NL_in_keyValue988]; 
                 

                value =  [group createSingleton:BIGSTRING_NO_NL13];


                 
                }
                break;
            case 3 : ;
                // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:363:9: ANONYMOUS_TEMPLATE // alt
                {

                ANONYMOUS_TEMPLATE14=(CommonToken *)[self match:input TokenType:ANONYMOUS_TEMPLATE Follow:FOLLOW_ANONYMOUS_TEMPLATE_in_keyValue1004]; 
                 

                value =  [group createSingleton:ANONYMOUS_TEMPLATE14];


                 
                }
                break;
            case 4 : ;
                // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:364:9: STRING // alt
                {

                STRING15=(CommonToken *)[self match:input TokenType:STRING Follow:FOLLOW_STRING_in_keyValue1017]; 
                 

                value =  [Misc replaceEscapes:[Misc strip:(STRING15!=nil?STRING15.text:nil) n:1]];


                 
                }
                break;
            case 5 : ;
                // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:365:9: T_TRUE // alt
                {

                [self match:input TokenType:T_TRUE Follow:FOLLOW_T_TRUE_in_keyValue1042]; 
                 

                value =  [ACNumber numberWithBool:YES];


                 
                }
                break;
            case 6 : ;
                // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:366:9: T_FALSE // alt
                {

                [self match:input TokenType:T_FALSE Follow:FOLLOW_T_FALSE_in_keyValue1067]; 
                 

                value =  [ACNumber numberWithBool:NO];


                 
                }
                break;
            case 7 : ;
                // /Users/acondit/source/antlr/code/stringtemplate4/objc/main/compiler/Group.g:367:9: {...}? => ID // alt
                {

                if ( !(([[[input LT:1] text] isEqualToString:@"key"])) ) {
                    @throw [FailedPredicateException newException:@"keyValue" predicate:@"[[[input LT:1] text] isEqualToString:@\"key\"]" stream:input];
                }
                 
                [self match:input TokenType:ID Follow:FOLLOW_ID_in_keyValue1094]; 
                 

                value =  STGroup.DICT_KEY;


                 
                }
                break;

        }
        /* token+rule list labels */

    }
    @catch (RecognitionException *re) {

                [self error:[NSString stringWithFormat:@"missing value for key at '%@'", [[input LT:1] text]]];
            
    }

    @finally {
        /* ruleScopeCleanUp */

    }
    return value;
}
/* $ANTLR end keyValue */
/* ObjC end rules */

@end /* end of GroupParser implementation line 692 */
